name: Staging - Pull Request

on:
  pull_request_target:
    branches: [main]
    paths-ignore:
      - .vscode/**
      - .env.example
      - .gitignore
      - LICENSE
      - .npmignore
      - "*.md"

jobs:
  pre_ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: commit_message
        run: echo ::set-output name=commit_message::$(git log --format=%B -n 1 HEAD^2)

    outputs:
      commit_message: $( echo "${{ steps.commit_message.outputs.commit_message }}" )

  lint:
    needs: pre_ci
    runs-on: ubuntu-latest
    if: "(!contains(needs.pre_ci.outputs.commit_message, '[skip lint]') && !contains(needs.pre_ci.outputs.commit_message, 'chore(release): '))"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    needs: pre_ci
    runs-on: ubuntu-latest
    if: "(!contains(needs.pre_ci.outputs.commit_message, '[skip test]')  && !contains(needs.pre_ci.outputs.commit_message, 'chore(release): '))"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Build
        run: npm run build
